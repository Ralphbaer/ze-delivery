basePath: /v1
consumes:
- application/json
definitions:
  Address:
    description: Address follows the GeoJSON Point format (https://en.wikipedia.org/wiki/GeoJSON)
    properties:
      coordinates:
        items:
          format: double
          type: number
        type: array
        x-go-name: Coordinates
      type:
        type: string
        x-go-name: Type
    type: object
    x-go-package: github.com/Ralphbaer/ze-delivery/partner/usecase
  CoverageArea:
    description: CoverageArea follows the GeoJSON MultiPolygon format (https://en.wikipedia.org/wiki/GeoJSON)
    properties:
      coordinates:
        items:
          items:
            items:
              items:
                format: double
                type: number
              type: array
            type: array
          type: array
        type: array
        x-go-name: Coordinates
      type:
        type: string
        x-go-name: Type
    type: object
    x-go-package: github.com/Ralphbaer/ze-delivery/partner/entity
  CreatePartnerInput:
    description: We can understand it as a Command. It is used in CREATE operations.
    properties:
      address:
        $ref: '#/definitions/Address'
      coverageArea:
        $ref: '#/definitions/CoverageArea'
      document:
        type: string
        x-go-name: Document
      ownerName:
        type: string
        x-go-name: OwnerName
      tradingName:
        type: string
        x-go-name: TradingName
    title: CreatePartnerInput is the set of information that will be used to enter data through our handlers.
    type: object
    x-go-package: github.com/Ralphbaer/ze-delivery/partner/usecase
  FieldValidations:
    additionalProperties:
      type: string
    title: FieldValidations represents a field error response.
    type: object
    x-go-package: github.com/Ralphbaer/ze-delivery/common/net/http
  Partner:
    description: including its coordinates represented by the coverageArea and address fields.
    properties:
      address:
        $ref: '#/definitions/Address'
      coverageArea:
        $ref: '#/definitions/CoverageArea'
      document:
        description: Document is a unique field
        type: string
        x-go-name: Document
      id:
        description: ID is a unique field
        type: string
        x-go-name: ID
      ownerName:
        type: string
        x-go-name: OwnerName
      tradingName:
        type: string
        x-go-name: TradingName
    title: Partner represents a collection of identification data of a ZÃ© Delivery Partner,
    type: object
    x-go-package: github.com/Ralphbaer/ze-delivery/partner/entity
  ResponseError:
    description: ResponseError represents a HTTP response error payload
    properties:
      code:
        format: int64
        type: integer
        x-go-name: Code
      message:
        type: string
        x-go-name: Message
      origin:
        type: string
        x-go-name: Origin
    type: object
    x-go-package: github.com/Ralphbaer/ze-delivery/common/net/http
  ValidationError:
    description: ValidationError represents an error occurred when a request to an action is invalid
    properties:
      code:
        format: int64
        type: integer
        x-go-name: Code
      fields:
        $ref: '#/definitions/FieldValidations'
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/Ralphbaer/ze-delivery/common/net/http
host: api.ze-delivery.com
info:
  description: This guide describes partners, events, and their relationship to each other.
  title: partner API.
  version: 0.0.1
paths:
  /partner/partners:
    post:
      description: Register a new Partner into database
      operationId: Create
      parameters:
      - description: The payload
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/CreatePartnerInput'
        type: string
      responses:
        "201":
          description: Success Operation
          schema:
            $ref: '#/definitions/Partner'
        "400":
          description: Invalid Input - Input has invalid/missing values
          examples:
            application/json:
              code: 400
              message: message
          schema:
            $ref: '#/definitions/ValidationError'
        "409":
          description: Conflict - partner document already taken
          examples:
            application/json:
              code: 409
              message: message
          schema:
            $ref: '#/definitions/ResponseError'
      security:
      - Definitions: []
      tags:
      - partners
  /partner/partners/{id}:
    get:
      description: Returns an partner by its id
      operationId: GetByID
      parameters:
      - description: The id of the partner
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Success Operation
          schema:
            $ref: '#/definitions/partner'
        "404":
          description: Not Found - Resource does not exists
          examples:
            application/json:
              code: 404
              message: message
          schema:
            $ref: '#/definitions/ResponseError'
      tags:
      - partners
  /partner/partners/nearest:
    get:
      description: Returns a partner given coordinates longitude and latitude
      operationId: GetNearestPartner
      parameters:
      - description: Longitude
        in: query
        name: long
        required: true
        type: integer
      - description: Latitude
        in: query
        name: lat
        required: true
        type: integer
      responses:
        "200":
          description: Success Operation
          schema:
            $ref: '#/definitions/partner'
        "404":
          description: Not Found - Resource does not exists
          examples:
            application/json:
              code: 404
              message: message
          schema:
            $ref: '#/definitions/ResponseError'
      tags:
      - partners
produces:
- application/json
schemes:
- http
- https
swagger: "2.0"
x-meta-array:
- value1
- value2
x-meta-array-obj:
- name: obj
  value: field
x-meta-value: value
