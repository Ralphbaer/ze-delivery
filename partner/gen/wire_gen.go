// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package gen

import (
	"github.com/Ralphbaer/ze-delivery/common"
	"github.com/Ralphbaer/ze-delivery/partner/app"
	"github.com/Ralphbaer/ze-delivery/partner/handler"
	"github.com/Ralphbaer/ze-delivery/partner/repository"
	"github.com/Ralphbaer/ze-delivery/partner/usecase"
	"github.com/google/wire"
	"github.com/gorilla/mux"
	"net/http"
	"sync"
)

// Injectors from inject.go:

func InitializeApp() *app.App {
	config := app.NewConfig()
	mongoConnection := setupMongoConnection(config)
	partnerMongoRepository := repository.NewPartnerMongoRepository(mongoConnection)
	partnerUseCase := &usecase.PartnerUseCase{
		PartnerRepo: partnerMongoRepository,
	}
	partnerHandler := &handler.PartnerHandler{
		UseCase: partnerUseCase,
	}
	router := app.NewRouter(partnerHandler)
	server := app.NewServer(config, router)
	appApp := &app.App{
		Server: server,
	}
	return appApp
}

// inject.go:

var onceConfig sync.Once

func setupMongoConnection(cfg *app.Config) *common.MongoConnection {
	return &common.MongoConnection{
		ConnectionString: cfg.MongoConnectionString,
		Verbose:          true,
	}
}

var applicationSet = wire.NewSet(common.InitLocalEnvConfig, setupMongoConnection, app.NewConfig, app.NewRouter, app.NewServer, repository.NewPartnerMongoRepository, wire.Struct(new(usecase.PartnerUseCase), "*"), wire.Struct(new(handler.PartnerHandler), "*"), wire.Bind(new(repository.PartnerRepository), new(*repository.PartnerMongoRepository)), wire.Bind(new(http.Handler), new(*mux.Router)))
